#output(x)=[<span class="output-marker">=></span> <span class="output">]x[</span>]
#printed(x)=[<span class="output">]x[</span>]

(Assignment
 {ruby
  [[1 x] [2 =] [3 3]]
  [[4 x] [5 =] [6 4]]
  [[7 x] [8 =] [9 x] [10 +] [11 1]]
  [[12 puts] [13 x]
#output([14 5])]
 }

 {english
  [[2 Set the value of] [1 the variable <b>x</b>] [2 to be] [3 <b>3</b>].]
  [[5 Set the value of] [4 the variable <b>x</b>] [5 to be] [6 <b>4</b>] (over-writing the previous value of <b>3</b>)]
  [[8 Set the new value of] [7 the variable <b>x</b>] [8 to be] [9 the current value of <b>x</b>] [10 plus] [11 <b>1</b>]
   (so the new value of  <b>x</b> will be <b>4 + 1 = 5</b>)]
  [[12 Print out] [13 the value of the variable <b>x</b>] (prints out #printed([14 5]))]
 }
)

(Define and use a function to square a number
 {ruby
  [[1 def] [2 square][3 (x)]]
  [   [4 return] [5 x][6 *][7 x]]
  [[1 end]]
  [[8 puts] [9 square]([10 5])
#output([11 25])]
 }

 {english
  [[1 Define] [2 <b>square</b>] [1 to be a function that takes] [3 one argument <b>x</b>] and
   [4 returns the value of] [5 <b>x</b>] [6 multiplied by] [7 itself].]
  [[8 Print out] the value of the [9 <b>square</b>] of [10 <b>5</b>] (prints out #printed([11 25]))]
 }
)

(Define and use a function to calculate "triangle" numbers
 {ruby
  [[1 def] [2 triangle] [3 (n)]]
  [    [4 sum] [5 =] [6 0]]
  [    [7 for] [8 i] [9 in 1..n] [7 do]]
  [        [10 sum] [11 +=] [12 i]]
  [    [7 end]]
  [    [13 sum]]
  [[1 end]]
  [[14 puts] [15 triangle]([16 6])
#output([17 21])]
 }

 {english
  [[1 Define] [2 <b>triangle</b>] [1 to be a function that takes] [3 one argument <b>n</b>].]
  [[5 Set the variable] [4 <b>sum</b>] [5 to] [6 0].]
  [[7 For each] [9 number] [8 <b>i</b>] [9 from <b>1</b> to <b>n</b>],]
  [[11 add] [12 <b>i</b>] [11 to the value of] [10 <b>sum</b>].]
  [[13 Then return the value of <b>sum</b>.] (The last expression in a Ruby function is returned
   if there is no explicit <b>return</b> statement.)]
  [[14 Print out] the value of the function [15 <b>triangle</b>] applied to [16 <b>6</b>] 
    (prints out #printed([17 21]) = 1 + 2 + 3 + 4 + 5 + 6).]
 }
)





