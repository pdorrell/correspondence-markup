require "correspondence-ml/types"

grammar CorrespondenceMarkupLanguage

  include CorrespondenceMarkup

  rule structure_group
    "[" [\s]* (structure [\s]*)* "]"
  end

  rule structure
    "[" components:(item / non_item)* "]"
    { 
      def value
        CorrespondenceMarkup::Structure.new(components.elements.map &:value)
      end
    }
    
  end

  rule non_item
    text:(![\[\]] .)+
    { 
      def value
        CorrespondenceMarkup::NonItem.new(text.text_value)
      end
    }
  end

  rule item
    "[" id:number [\s]+ text:(![\]] .)* "]"
    { 
      def value
        CorrespondenceMarkup::Item.new(id.value, text.text_value)
      end
    }
  end

  rule number
    [0-9]+
    { 
      def value
        text_value.to_i
      end
    }
  end
end
